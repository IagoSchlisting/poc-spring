<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <http auto-config="true">
        <access-denied-handler error-page="/403" />
        <intercept-url pattern="/" access="hasRole('ROLE_USER')" />

        <intercept-url pattern="/userday/**" access="hasRole('ROLE_MEMBER')" />

        <intercept-url pattern="/user/**" access="hasRole('ROLE_OWNER')" />
        <intercept-url pattern="/period/**" access="hasRole('ROLE_OWNER')" />
        <intercept-url pattern="/calendar/admin/**" access="hasRole('ROLE_OWNER')" />
        <intercept-url pattern="/day/admin/**" access="hasRole('ROLE_OWNER')" />

        <intercept-url pattern="/calendar/manage/**" access="permitAll" />
        <intercept-url pattern="/login" access="permitAll" />
        <intercept-url pattern="/resources/**" access="permitAll" />

        <form-login
                login-page="/login"
                default-target-url="/"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password" />
        <logout logout-success-url="/login?logout" />
        <!-- enable csrf protection -->
        <csrf/>
    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <password-encoder ref="passwordEncoder" />
            <jdbc-user-service data-source-ref="dataSourceDefault"
            users-by-username-query="SELECT username, password, enabled FROM USER WHERE username = ?"
            authorities-by-username-query="SELECT u.username as username, r.role as authority
            FROM USER u INNER JOIN USER_ROLES ur ON u.user_id = ur.user_id
            INNER JOIN ROLE r ON ur.role_id = r.role_id WHERE u.username = ?"/>
        </authentication-provider>
    </authentication-manager>
    <b:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</b:beans>
